import { dirname, join, resolve } from 'node:path';
import { fileURLToPath } from 'node:url';

// Reused variables
const serverDistFolder = dirname(fileURLToPath(import.meta.url));

export const serverConfig = {
  // Server settings
  PORT: process.env['PORT'] || 8080,
  METRICS_PORT: process.env['METRICS_PORT'] || 9090,
  HOST: process.env['HOST'] || `localhost:${process.env['PORT'] || 8080}`,

  // Paths
  serverDistFolder: serverDistFolder,
  browserDistFolder: resolve(serverDistFolder, '../browser'),
  indexHtml: join(serverDistFolder, 'index.server.html'),

  // Cache settings
  pageCache: {
    ttl: 86400000, // 24 hours
    maxSize: 100, // Maximum size of the cache before entries get dropped
  },

  // Pages to auto-generate
  autoGeneratedPages: [
    {
      path: '/',
      interval: 300000, // 5 minute
    },
    {
      path: '/about/changelog',
      interval: 3600000, // 60 minutes
    },
    {
      path: '/about/privacy',
      interval: 86400000, // 24 hours
    },
    {
      path: '/about/terms',
      interval: 86400000, // 24 hours
    },
    {
      path: '/trackers/price',
      interval: 30000, // 30 seconds
    },
    {
      path: '/trackers/xp',
      interval: 30000, // 30 seconds
    },
  ],

  // These files are served by the static middleware and should not be cached
  noCacheStaticFiles: ['/ngsw.json', '/ngsw-worker.js', '/manifest.webmanifest', '/sitemap.xml', '/robots.txt'],
};
